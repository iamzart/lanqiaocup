***树的概念
树的定义：树形结构是一类非常重要的非线性数据结构

树是递归定义的

结点的度：一个结点的孩子个数称为结点的度

树的度：最大的结点的度

树的高度：有几层

路径：两个结点之间最短路径

根节点、叶结点、分支节点

父结点：直接前驱

孩子结点：直接后继

****树在竞赛中的常见形式

#有序树：结点的子树按照从左往右顺序排列不能更改
#无序树：没有顺序，只要不少孩子就行

（除了二叉树，都是无序树）

#有根树和无根树
#节点固定，和是谁都可以做节点
竞赛中一般是无根树
父子关系不确定


***树的存储
*孩子表示法
是将每个孩子的信息都存储下来
无根树中，父子关系不明确，应该把与该节点相连的所有节点都存储下来


**树的遍历
深度优先搜索DFS
一条路走到黑，走不通了再返回来

从根节点出发，依次遍历每一棵子树
（不断的找孩子）
再遍历子树的时候，重复第一步
但要找的是没有访问过的孩子，bool数组出场！
用vector和链式前向星两个方法
depth first search


宽度优先遍历BFS
breadth
每次尝试访问同一层的结点，访问完一层在访问下一层

用队列实现
先让根节点入队，如果此时队列不为空，删除头部，再让他的所有孩子入队，
然后再
如果不为空，删除头部，让所有孩子入队
记得都打上标记












