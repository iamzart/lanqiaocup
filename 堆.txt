堆

堆的定义：
1.是一颗完全二叉树
2.对于树中的每个节点，如果存在子树，那么该节点的权值大于等于（或者小于等于）子树中所有结点的权值
如果根节点的权值大于等于子树的权值，称为大根堆，反之，成为小根堆

堆的核心操作
时间复杂度是logn 
向上调整算法，用于向堆中插入元素
在尾部插入一个，不断与父结点比较，如果不符合顺序就交换，直到是一个合法堆

向下调整算法
用于删除堆中的元素
删除的时候是，把顶上的和最底下的交换，然后再把最上边的好人慢慢挪到队伍中间，往下的时候要和两个孩子中权值大的交换

插入
就用顺序表的尾插方法，up
删除
先把首尾交换，然后删除最后一个，down
查询堆顶元素
堆的大小

<queue>
默认是一个大根堆
priority_queue
size/empty push pop 

priority_queue<数据类型，存储方式，比较方式>
less<int>&greater<int>

大根堆比较方式是小于
小根堆比较方式是大于

如果是结构体类型
在结构体中重载 < 比较运算符
bool operater < (const node& x) const
{
	return b>x.b;
}
这个加在结构体的大括号里































